<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!-- web.xml中shiro的filter对应的bean -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>

        <!-- loginUrl认证提交地址，如果没有认证将会请求此地址进行认证，请求此地址将由formAuthenticationFilter进行表单认证 -->
        <property name="loginUrl" value="/login"/>


        <!-- 认证成功统一跳转到首页，shiro认证成功自动到上一个请求路径 -->
        <property name="successUrl" value="/index.jsp"/>

        <!-- 指定没有权限操作时跳转页面-->
        <property name="unauthorizedUrl" value="/refuse.jsp"/>

        <!-- 自定义filter配置 -->
        <property name="filters">
            <map>
                <!-- 将自定义 的FormAuthenticationFilter注入shiroFilter中-->
                <entry key="authc" value-ref="formAuthenticationFilter"/>
            </map>
        </property>

        <!-- 过虑器链 -->
        <property name="filterChainDefinitions">
            <value>

                <!--               所有静态资源都可以匿名访问-->
                /css/** = anon
                /js/** = anon
                /common/**=anon
                /bootstrap-3.3.7-dist/**=anon
                /imgs/**=anon
                /index.jsp=anon
                <!--获取用户请求、获取验证码、登陆页面、注册、忘记密码都不用认证
                /user/getUser.do=anon
                /user/getGifCode.do=anon
                /goURL/user/toLogin.do=anon
                /goURL/user/toRegister.do=anon
                /goURL/user/toForget.do=anon-->

                <!--退出-->
                /logout.action = logout

                <!--登陆、在线聊天，个人收藏夹，个人备忘录时需要认证-->
                /login = authc
                /goURL/onlineBarrage/onlineBarrage.do = authc
                /goURL/favorites/toFavorites.do = authc
                /goURL/memo/toMemo.do = authc


                /**=anon

            </value>
        </property>
    </bean>

    <!-- 凭证匹配器 -->
    <bean id="credentialsMatcher"
          class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
        <property name="hashAlgorithmName" value="md5"/>
        <property name="hashIterations" value="2"/>
    </bean>

    <!-- securityManager安全管理器 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">

        <!--自定义realm-->
        <property name="realm" ref="userRealm"/>

        <!--缓存管理器-->
        <property name="cacheManager" ref="cacheManager"/>

        <!-- 注入session管理器 -->
        <property name="sessionManager" ref="sessionManager"/>

        <!-- 记住我 -->
        <property name="rememberMeManager" ref="rememberMeManager"/>

    </bean>

    <!-- 自定义realm -->
    <bean id="userRealm" class="com.joe.shiro.UserRealm">
        <!-- 将凭证匹配器设置到realm中，realm按照凭证匹配器的要求进行散列 -->
        <property name="credentialsMatcher" ref="credentialsMatcher"/>
    </bean>

    <!-- 缓存管理器 -->
    <bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
        <property name="cacheManagerConfigFile" value="classpath:shiro-ehcache.xml"/>
    </bean>

    <!-- 会话管理器 -->
    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">

        <!--不允许url重写sessionId-->
        <property name="sessionIdUrlRewritingEnabled" value="false" />
        <!-- session的失效时长，单位毫秒 -->
        <property name="globalSessionTimeout" value="800000"/>
        <!-- 删除失效的session -->
        <property name="deleteInvalidSessions" value="true"/>
    </bean>

    <!-- 自定义form认证过虑器-->
    <bean id="formAuthenticationFilter"
          class="com.joe.shiro.UserFormAuthenticationFilter ">
        <!-- 表单中账号的input名称 -->
        <property name="usernameParam" value="userEmail"/>
        <!-- 表单中密码的input名称 -->
        <property name="passwordParam" value="userPassword"/>
<!--        <property name="rememberMeParam" value="rememberMe"/>-->

    </bean>

    <!-- rememberMeManager管理器，写cookie，取出cookie生成用户信息 -->
    <bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
        <property name="cookie" ref="rememberMeCookie" />
    </bean>
    <!-- 记住我cookie -->
    <bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <!-- rememberMe是cookie的名字 -->
        <constructor-arg value="rememberMe" />
        <!-- 记住我cookie生效时间30天 -->
        <property name="maxAge" value="2592000" />
    </bean>
</beans>